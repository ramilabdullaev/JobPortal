@using JobPortal.Data.Paging;
@using JobPortal.Data.ViewModel;
@model PaginatedList<JobVM>

@{
    ViewData["Title"] = "Index";
    string nameSortParam = Context.Request.Query["sortByName"];
    string categoryParam = Context.Request.Query["category"];
    string industryParam = Context.Request.Query["industry"];
    string searchStringParam = Context.Request.Query["searchString"];
}


<div class="row">
    <div class="col-md-8">
        <form asp-controller="User" asp-action="Index" method="get">
            <label for="category">Category:</label>
            <select id="category" name="category">
                <option value="">All</option>
                <option value="fulltime">Full Time</option>
                <option value="parttime">Part Time</option>
                <option value="internship">Internship</option>
            </select>

            <label for="industry">Industry:</label>
            <select id="industry" name="industry">
                <option value="">All</option>
                <option value="finance">Finance</option>
                <option value="it">IT</option>
                <option value="education">Education</option>
                <option value="construction">Construction</option>
            </select>

            <button type="submit">Apply Filters</button>
        </form>
    </div>
    <div class="col-md-4">
        <form asp-controller="User" asp-action="Index" method="get">
            <p>
                Job name:<input type="text" name="searchString" />
                <input type="submit" value="Search" />
            </p>
        </form>
    </div>
</div>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.ActionLink("Job name", "Index", new{sortByName = ViewBag.NameSortParam})
            </th>
            <th>
                @Html.DisplayName("Description")
            </th>
            <th>
                @Html.DisplayName("Category")
            </th>
            <th>
                @Html.DisplayName("Industry")
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Category)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Industry)
                </td>
                <td>
                    @Html.ActionLink("Apply", "Apply", new { jobId=item.Id})
                </td>
            </tr>
        }
    </tbody>
</table>

<nav aria-label="Page navigation example">
    <ul class="pagination">
        <li class="page-item">
            <a class="page-link" href="#" aria-label="Previous">
                <span aria-hidden="true">&laquo;</span>
            </a>
        </li>
        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            if (i == Model.PageIndex)
            {
                <li class="page-item"><a class="page-link" href="@Url.Action("Index", new {pageNumber = i, sortByName = nameSortParam, category = categoryParam, industry = industryParam, searchString = searchStringParam })">@i</a></li>
            }
            else
            {
                <li class="page-item"><a class="page-link" href="@Url.Action("Index", new {pageNumber = i, sortByName = nameSortParam, category = categoryParam, industry = industryParam, searchString = searchStringParam })">@i</a></li>
            }
        }
        @if (Model.PageIndex < Model.TotalPages)
        {
            <li class="page-item">
                <a class="page-link" href="@Url.Action("Index", new {pageNumber = Model.PageIndex + 1, sortByName = nameSortParam, category = categoryParam, industry = industryParam, searchString = searchStringParam })" aria-label="Next">
                <span aria-hidden="true">&raquo;</span>
            </a>
        </li>
        }
    </ul>
</nav>

