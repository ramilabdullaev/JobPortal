@model IEnumerable<JobPortal.Data.ViewModel.JobVM>

@{
    ViewData["Title"] = "Index";
}

<div>
    <form asp-controller="User" asp-action="Index" method="get">
    <label for="category">Category:</label>
    <select id="category" name="category">
        <option value="">All</option>
        <option value="fulltime">Full Time</option>
        <option value="parttime">Part Time</option>
        <option value="internship">Internship</option>
    </select>

    <label for="industry">Industry:</label>
    <select id="industry" name="industry">
        <option value="">All</option>
        <option value="finance">Finance</option>
        <option value="it">IT</option>
        <option value="education">Education</option>
        <option value="construction">Construction</option>
    </select>

    <button type="submit">Apply Filters</button>
    </form>
</div>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Category)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Industry)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Category)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Industry)
                </td>
                <td>
                    @Html.ActionLink("Apply", "Apply", new { jobId=item.Id})
                </td>
            </tr>
        }
    </tbody>
</table>